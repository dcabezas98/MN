(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    289394,       6223]
NotebookOptionsPosition[    281273,       5959]
NotebookOutlinePosition[    281643,       5975]
CellTagsIndexPosition[    281600,       5972]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pr\[AAcute]ctica 3", "Title",
 CellChangeTimes->{{3.7029006723759737`*^9, 3.702900676048998*^9}}],

Cell[CellGroupData[{

Cell["Ejercicio1:", "Subchapter",
 CellChangeTimes->{{3.7029007327315674`*^9, 3.70290073971185*^9}}],

Cell["S1)", "Text",
 CellChangeTimes->{{3.7029007498842955`*^9, 3.7029007533318324`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "=", 
  RowBox[{"{", 
   RowBox[{"0.1", ",", "0.1", ",", 
    RowBox[{"-", "1"}], ",", "0.3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"RowReduce", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2", ",", "2.3", ",", "3.4"}], "}"}]}], "}"}], 
    "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.70289926372174*^9, 3.702899280306269*^9}, {
  3.702899324372572*^9, 3.7028993740436554`*^9}, {3.702899408724124*^9, 
  3.702899411442483*^9}, {3.7028998330237894`*^9, 3.702899837743244*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1`", ",", "0.1`", ",", 
   RowBox[{"-", "1"}], ",", "0.3`"}], "}"}]], "Output",
 CellChangeTimes->{3.7028993756442056`*^9, 3.7028994120587254`*^9, 
  3.702899839413313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "a", "]"}], ".", "a", ".", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Transpose", "[", "a", "]"}], ".", "b"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702899486313777*^9, 3.702899583889291*^9}, {
  3.7028996639502497`*^9, 3.7028996758151913`*^9}, {3.702899725455106*^9, 
  3.702899855442069*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "0.10000000000000002`"}], ",", 
    RowBox[{"y", "\[Rule]", "0.09999999999999999`"}], ",", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"-", "1.`"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.702899571470705*^9, 3.7028995860060396`*^9}, 
   3.702899676478963*^9, {3.7028997542892*^9, 3.7028998075420313`*^9}, 
   3.7028998566589527`*^9, 3.7028999028517337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"a", ".", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "0.1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.702899704187947*^9, 3.70289972198623*^9}, {
  3.7028998220005536`*^9, 3.7028998254865246`*^9}, {3.702899908339645*^9, 
  3.7028999412483745`*^9}, {3.7029000824644976`*^9, 3.702900085371685*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1`", ",", "0.1`", ",", 
   RowBox[{"-", "1.`"}], ",", "0.30000000000000004`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7028997716228867`*^9, {3.7028998177499237`*^9, 3.7028998259181232`*^9}, {
   3.7028999201945796`*^9, 3.7028999424815435`*^9}, 3.702900086371045*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"b", "-", "c"}], ")"}], ".", 
  RowBox[{
   RowBox[{"Transpose", "[", "a", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"b", "-", "c"}], ")"}], ".", 
  RowBox[{
   RowBox[{"Transpose", "[", "a", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"b", "-", "c"}], ")"}], ".", 
  RowBox[{
   RowBox[{"Transpose", "[", "a", "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7029000951961117`*^9, 3.7029001943007727`*^9}, {
  3.702900254966992*^9, 3.702900255376025*^9}}],

Cell[BoxData[
 RowBox[{"-", "9.251858538542968`*^-18"}]], "Output",
 CellChangeTimes->{{3.7029001130694103`*^9, 3.702900149195943*^9}, 
   3.702900194826189*^9, 3.7029002563655343`*^9}],

Cell[BoxData[
 RowBox[{"-", "1.5728159515523052`*^-16"}]], "Output",
 CellChangeTimes->{{3.7029001130694103`*^9, 3.702900149195943*^9}, 
   3.702900194826189*^9, 3.7029002563675113`*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.7029001130694103`*^9, 3.702900149195943*^9}, 
   3.702900194826189*^9, 3.7029002563685102`*^9}]
}, Open  ]],

Cell["S2)", "Text",
 CellChangeTimes->{{3.702900766688759*^9, 3.7029007685359507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "-", "y"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "+", 
       RowBox[{"4.2", "y"}], "-", "1"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702900403092122*^9, 3.7029004692385955`*^9}, {
  3.7029005318665495`*^9, 3.7029005476716323`*^9}, {3.7029005882771673`*^9, 
  3.702900594950246*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "0.16129032258064513`"}], ",", 
    RowBox[{"y", "\[Rule]", "0.16129032258064516`"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.70290044919216*^9, 3.7029004699026365`*^9}, 
   3.7029005499870963`*^9, 3.7029005961046333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.7"}], ",", "2", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.16129", ",", "0.16129", ",", "0", ",", "1"}], "}"}]}], "}"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.702900554531192*^9, 3.702900619045767*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.7`"}], ",", "0.16129`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.16129`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702900620230282*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "a", "]"}], ".", "a", ".", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Transpose", "[", "a", "]"}], ".", "b"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7029007871978817`*^9, 3.702900824828963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.05818946896754123`"}]}], ",", 
    RowBox[{"y", "\[Rule]", "0.3006598454251355`"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.702900825837922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"a", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0581895"}], ",", "0.30066"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.702900941167319*^9, 3.7029009933682528`*^9}, 
   3.702901110609606*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2637946014`", ",", 
   RowBox[{"-", "0.06788554860000001`"}], ",", 
   RowBox[{"-", "0.0581895`"}], ",", "0.30066`"}], "}"}]], "Output",
 CellChangeTimes->{3.702900994011127*^9, 3.702901111995395*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"b", "-", "c"}], ")"}], ".", 
  RowBox[{
   RowBox[{"Transpose", "[", "a", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"b", "-", "c"}], ")"}], ".", 
  RowBox[{
   RowBox[{"Transpose", "[", "a", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.70290099824459*^9, 3.702901043549817*^9}}],

Cell[BoxData["6.223800000926261`*^-7"], "Output",
 CellChangeTimes->{{3.702901034296311*^9, 3.7029010452328568`*^9}, 
   3.702901114278844*^9}],

Cell[BoxData[
 RowBox[{"-", "1.711261119891061`*^-7"}]], "Output",
 CellChangeTimes->{{3.702901034296311*^9, 3.7029010452328568`*^9}, 
   3.7029011142816105`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subchapter",
 CellChangeTimes->{{3.7029011472392397`*^9, 3.7029011567810645`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{"{", 
   RowBox[{"2", ",", "0", ",", "3.2", ",", 
    RowBox[{"Pi", "/", "9"}], ",", "4", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7029013622675533`*^9, 3.70290139303123*^9}, {
  3.7035049755337934`*^9, 3.70350497568911*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "0", ",", "3.2`", ",", 
   FractionBox["\[Pi]", "9"], ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.7029013935211067`*^9, 3.7035043859744987`*^9, 
  3.7035049769902563`*^9, 3.703505041591627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", 
       RowBox[{"-", "1.1"}], ",", "2", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "19"}], "/", "2"}]}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7029012406631207`*^9, 3.702901313648921*^9}, {
  3.7029014188065233`*^9, 3.7029014245528517`*^9}, {3.7029014633648834`*^9, 
  3.7029014662913585`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox["19", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702901314718211*^9, 3.702901395151044*^9, 
  3.702901425386175*^9, 3.702901467611136*^9, 3.7035048854668365`*^9, 
  3.7035049780577765`*^9, 3.7035050423754535`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", 
       RowBox[{"-", "1.1"}], ",", "2", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "19"}], "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1.1"}], ")"}], "^", "2"}], ",", "4", ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "19"}], "/", "2"}], ")"}], "^", "2"}]}], "}"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.703504211296828*^9, 3.7035042958200083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1.1`"}], ",", "1.2100000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox["19", "2"]}], ",", 
     FractionBox["361", "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7035043121517277`*^9, 3.7035049790004826`*^9, 
  3.703505043230404*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "a", "]"}], ".", "a", ".", 
     RowBox[{"{", 
      RowBox[{"n", ",", "m"}], "}"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Transpose", "[", "a", "]"}], ".", "b"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "m"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702901396970482*^9, 3.7029014100128202`*^9}, {
   3.70290147425671*^9, 3.7029014790901923`*^9}, {3.7029015090903845`*^9, 
   3.7029015259661117`*^9}, 3.7029015621433687`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "\[Rule]", "1.9422201398378836`"}], ",", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "0.24944013307520588`"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.702901562642135*^9, 3.703504893234042*^9, 
  3.703504979948345*^9, 3.7035050442242384`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "c", "]"}], ".", "c", ".", 
     RowBox[{"{", 
      RowBox[{"a0", ",", "a1", ",", "a2"}], "}"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Transpose", "[", "c", "]"}], ".", "b"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a0", ",", "a1", ",", "a2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70350433556273*^9, 3.70350439961716*^9}, {
  3.7035044535315313`*^9, 3.703504460181919*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a0", "\[Rule]", "2.2699691152945727`"}], ",", 
    RowBox[{"a1", "\[Rule]", 
     RowBox[{"-", "0.7519999369807663`"}]}], ",", 
    RowBox[{"a2", "\[Rule]", 
     RowBox[{"-", "0.05998287748727346`"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7035044795290747`*^9, 3.7035050459751987`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.24944"}], "x"}], "+", "1.94222"}]}]], "Input",
 CellChangeTimes->{{3.702901569324963*^9, 3.702901591926716*^9}, {
  3.703504432532668*^9, 3.7035044459198103`*^9}, {3.7035050125477543`*^9, 
  3.7035050273835993`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.0599829"}], 
    RowBox[{"x", "^", "2"}]}], "-", 
   RowBox[{"0.752", "x"}], "+", "2.26997"}]}]], "Input",
 CellChangeTimes->{{3.703504484991541*^9, 3.70350453317142*^9}, {
  3.7035050573314023`*^9, 3.70350509479788*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", "x", "]"}], ",", 
       RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "19"}], "/", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.1"}], ",", "3.2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"Pi", "/", "9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "19"}], "/", "2"}], ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7029016337222176`*^9, 3.7029016353202543`*^9}, {
  3.702901814036627*^9, 3.7029018313759265`*^9}, {3.702901872608491*^9, 
  3.702901952872038*^9}, {3.702902006735268*^9, 3.7029020094776134`*^9}, {
  3.702902198537509*^9, 3.702902206038739*^9}, {3.70350454244392*^9, 
  3.7035045773377204`*^9}, {3.7035066878268332`*^9, 3.7035067922206564`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAtf4f+P//IsC4vsCyYj8RQDYq7qwx
/iLAbla0EXw+EUC4VbxhY/wiwCXup3CVPRFAvKxYy8b4IsCRHY8uyDsRQMJa
kZ6N8SLAaXxdqi04EUDQtgJFG+MiwBs6+qH4MBFA7G7lkTbGIsB+tTORjiIR
QCPfqittjCLARKymb7oFEUDaMcGwIQ8iwAxX4J44xxBAoDdNzCOaIcB7CeI3
24wQQDMwVmdxJyHAxKov6KJTEEAPm+pTBqsgwEgJ0QqRFRBA+rj01ug2IMDm
3nQuR7cPQFySFFclch/AtiXvK7k5D0BemDn/D3sewDZKAVh1vg5AfgRK1JWU
HcAGfqNXeksOQDBVcUyqmhzATSztO8zODUAADITxWbEbwOTpxvNmWg1AaqiQ
laDMGsAshTjaS+gMQGYptNx11BnA7JpRpX1sDECAEMNQ5uwYwPq/+kP4+AtA
LNzoZ+XxF8CBX0vHv3sLQHKNCH57+xbAutwzedEAC0DWpBPBrBUWwEFprP4r
jgpAzKA1p2wcFcBAcMxo0xEKQOACQ7rHMxTAjoZ8psOdCUCGSWdwsTcTwFQX
1MgAIAlAxnWFJTJAEsDLhcMZiKQIQCQIjwdOWRHAkgNDPlgxCEAUf6+M+F4Q
wND7aUd1tAdARbh2fXzqDsBeAyEk2z8HQJY9gt81IA3AnehvL4vNBkAKjLuH
DC8LwFRIZh+IUQZAu6bLiRlfCcBat+zizd0FQI6KCdJDaAfA16Aai2BgBUCW
OTsYnHoFwAdo4GE95QRA27RDuCquA8CFPjYMY3IEQEL5eZ7WugHAe48zm9X1
A0DNEw69cdH/v8DvwP2QgQNAf8sPOZI//L+4LeaOlg8DQHYVbUHtX/i/Juay
BOmTAkDn93f9tML0v+StD06EIAJAnmzeRbfX8L8Z8BN8bKMBQJ/z5INMXuq/
nUGofZ0uAUDTOtxz4jHjv9Rw1K0YvABAJE0V+drT1r+BGqjC4D8AQBUNUbJH
m8C//aYXVuOX/z/k21dVpL69P+UNLvCenP4/2xo2FIbj1j8yMHTn7qX9P2ru
LyLYpuI/HXHahdC//D/bqo0heHfqP/emj+1Lxvs/LBvIXJ/h8D9w+2T8WN36
P4LK4awmdfQ/TAtqaPr4+T+T559wc1b4PxYQvp01Afk/KmywgFP1+z+AMzJ6
Ahr4P1CqsTF+Bfw/KodEH/oV+D926LLiqBX8P9PaVsTxEfg/wmS1RP41/D8m
gnsO4Qn4P1pdugipdvw/zNDEor/59z+JTsSQ/vf8PxduV8t82fc/6DDYoKn6
/T+uqHwc95j3Pw5v2VHUCv4/WPyOwe6U9z80rdoC/xr+PwFQoWbmkPc/gCnd
ZFQ7/j9U98Ww1Yj3Pxci4ij/e/4/+kUPRbR49z9GE+ywVP3+P0bjoW1xWPc/
bFHtYX8N/z/vNrQSaVT3P5KP7hKqHf8/mYrGt2BQ9z/eC/F0/z3/P+wx6wFQ
SPc/dgT2OKp+/z+RgDSWLjj3P5xC9+nUjv8/O9RGOyY09z/CgPia/57/P+Qn
WeAdMPc/Dv36/FS//z83z30qDSj3PzQ7/K1/z/8/4CKQzwQk9z9aef1eqt//
P4p2onT8H/c/gLf+D9Xv/z80yrQZ9Bv3P6X1/8D///8/3R3HvusX9z/FzGM8

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 2.}, {0., 0.}, {-1.1, 3.2}, {2., 0.3490658503988659}, {0.,
       4.}, {-9.5, 4.}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.4},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7029019539764233`*^9, 3.7029020105347166`*^9, 3.702902207370351*^9, {
   3.703504437437931*^9, 3.70350444768752*^9}, 3.703504579293207*^9, 
   3.703505097778418*^9, {3.703506711343729*^9, 3.7035067567143407`*^9}, 
   3.703506793890253*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
6Y9+8Hix2n8DuUySWg==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3:", "Subchapter",
 CellChangeTimes->{{3.7035047892392364`*^9, 3.7035047990896873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", 
     RowBox[{"2", "Pi"}]}], ")"}], "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.7035047679046497`*^9, 3.7035048167393923`*^9}, 
   3.7035051175283113`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Id", "[", "x_", "]"}], ":=", "x"}], "\n", 
 RowBox[{
  RowBox[{"Cos2", "[", "x_", "]"}], ":=", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uno", "[", "x_", "]"}], ":=", "1"}]}], "Input",
 CellChangeTimes->{{3.703505679628231*^9, 3.7035057042836924`*^9}, {
   3.703505787433565*^9, 3.7035058154880037`*^9}, {3.7035060160643654`*^9, 
   3.70350603007865*^9}, 3.7046067002751665`*^9, 3.7046076674629793`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", "=", 
  RowBox[{"{", 
   RowBox[{"Uno", ",", "Id", ",", "Sin", ",", "Cos2", ",", "Exp"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703505618212097*^9, 3.7035056248954763`*^9}, {
  3.703505655281471*^9, 3.703505674689595*^9}, {3.703505717176749*^9, 
  3.7035057284181547`*^9}, {3.703505821791009*^9, 3.703505831651757*^9}, {
  3.7035060323005505`*^9, 3.703506035809996*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Uno", ",", "Id", ",", "Sin", ",", "Cos2", ",", "Exp"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.703505720596138*^9, 3.7035057313108134`*^9}, {
   3.703505826241403*^9, 3.703505832444084*^9}, 3.7035060385199227`*^9, 
   3.7035070999482775`*^9, 3.7035657695005674`*^9, 3.703690510755658*^9, 
   3.704607678447875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"productoEscalar", "[", 
   RowBox[{"f_", ",", "g_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], "*", 
     RowBox[{"g", "[", "x", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.703505455173807*^9, 3.7035055347947826`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"productoEscalar", "[", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"B", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"productoEscalar", "[", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "f"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7035058583586254`*^9, 3.7035058720806737`*^9}, {
  3.7035059387296143`*^9, 3.7035059885466747`*^9}, {3.703506093383526*^9, 
  3.7035061373943825`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[Pi]"}], ",", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", "2"]}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Pi]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", "2"]}], ",", 
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[Pi]", "3"]}], "3"], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", "0", ",", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", "\[Pi]", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", "\[Pi]"]}], " ", 
      RowBox[{"Sinh", "[", "\[Pi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "\[Pi]", ",", 
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Pi]"}]]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", "\[Pi]"]}], " ", 
      RowBox[{"Sinh", "[", "\[Pi]", "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "\[Pi]"}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7035061388646417`*^9, 3.7035071021026545`*^9, 
  3.7035657764681273`*^9, 3.7036905186099434`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"8", " ", 
     SuperscriptBox["\[Pi]", "3"]}], "3"], ",", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["\[Pi]", "4"]}], "3"], ",", 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Pi]", "2"]}], ",", "\[Pi]", ",", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Pi]"}]], "-", 
      RowBox[{"2", " ", "\[Pi]"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7035061388646417`*^9, 3.7035071021026545`*^9, 
  3.7035657764681273`*^9, 3.7036905191106396`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "b", "]"}]}], "Input",
 CellChangeTimes->{{3.70356575513791*^9, 3.703565761970645*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"2", " ", "\[Pi]"}], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Pi]", "2"]}], "0", "0", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Pi]"}]]}]},
     {
      RowBox[{"2", " ", 
       SuperscriptBox["\[Pi]", "2"]}], 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[Pi]", "3"]}], "3"], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Pi]"}], "0", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}]}]},
     {"0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Pi]"}], "\[Pi]", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", "\[Pi]"]}], " ", 
       RowBox[{"Sinh", "[", "\[Pi]", "]"}]}]},
     {"0", "0", "0", "\[Pi]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[Pi]"}]]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Pi]"}]]}], 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Pi]"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", "\[Pi]"]}], " ", 
       RowBox[{"Sinh", "[", "\[Pi]", "]"}]}], 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[Pi]"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "\[Pi]"}]]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7035657629596004`*^9, 3.7035657797007093`*^9}, 
   3.7036905235690126`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{"8", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "3"]},
      {
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox["\[Pi]", "4"]}], "3"]},
      {
       RowBox[{"4", " ", 
        SuperscriptBox["\[Pi]", "2"]}]},
      {"\[Pi]"},
      {
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[Pi]"}]], "-", 
          RowBox[{"2", " ", "\[Pi]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Pi]", "2"]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7035657629596004`*^9, 3.7035657797007093`*^9}, 
   3.7036905235846677`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{"A", ",", "b"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7035061755105524`*^9, 3.70350619101202*^9}, {
   3.703506251429429*^9, 3.7035063093570137`*^9}, {3.7035063469608254`*^9, 
   3.7035063653486567`*^9}, 3.7035063989168615`*^9, {3.7035071414439387`*^9, 
   3.703507142667707*^9}, {3.703507187045562*^9, 3.7035072456456113`*^9}, {
   3.703565807693584*^9, 3.7035658524314327`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"39.81716389650292`", ",", 
   RowBox[{"-", "9.702718636297949`"}], ",", 
   RowBox[{"-", "3.0147684323112043`"}], ",", 
   RowBox[{"-", "0.5297192903701639`"}], ",", "0.044956313489714086`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.703506297429939*^9, 3.703506320655282*^9}, {
   3.7035063860506897`*^9, 3.7035064145272856`*^9}, 3.7035071072945037`*^9, 
   3.703507144007004*^9, 3.7035072112801666`*^9, 3.7035072472847223`*^9, {
   3.703565841832511*^9, 3.703565852960814*^9}, 3.703690528204096*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"39.8172", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", "x", "]"}]}], "-", 
   RowBox[{"9.70272", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", "x", "]"}]}], "-", 
   RowBox[{"3.01477", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "[", "x", "]"}]}], "-", 
   RowBox[{"0.529719", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "[", "x", "]"}]}], "+", 
   RowBox[{"0.0449563", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.703506472398701*^9, 3.703506566537927*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"f1", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703506574677188*^9, 3.70350667898392*^9}, {
  3.7035068127309976`*^9, 3.703506816988265*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.703506818625809*^9, {3.703565889897375*^9, 3.7035659000798073`*^9}, 
   3.703690548495708*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 4", "Subchapter",
 CellChangeTimes->{{3.703690762181443*^9, 3.703690765131488*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", "j_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Cos", "[", "j", "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", "6"}], 
    RowBox[{"Sqrt", "[", "j", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7036911986437445`*^9, 3.7036912652570295`*^9}, {
  3.703691403288189*^9, 3.703691413283506*^9}, {3.7036914448612194`*^9, 
  3.703691449065596*^9}, {3.7040147127516546`*^9, 3.704014718808857*^9}, {
  3.7040147573622804`*^9, 3.7040147575093927`*^9}, {3.704109850315407*^9, 
  3.704109852953918*^9}, {3.7043492377520123`*^9, 3.704349238575801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"j", "/", "10"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{"p", "[", 
         RowBox[{"j", "/", "10"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7036926777863503`*^9, 3.703692767351774*^9}, {
  3.703692798456949*^9, 3.703692801619893*^9}, {3.7040147241915345`*^9, 
  3.7040147243115644`*^9}, {3.7040147631977625`*^9, 3.704014763329501*^9}, {
  3.704014952124143*^9, 3.704014956992518*^9}, {3.704109856560953*^9, 
  3.7041098595886593`*^9}, {3.7041107019390306`*^9, 3.7041107037996635`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"baseLagrange", "[", "nodos_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "nodos", "]"}]}], ",", 
      RowBox[{"l", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}]}], ",", 
      "i", ",", "x"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "n"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"Product", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "\[NotEqual]", "i"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", 
               RowBox[{"nodos", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nodos", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"nodos", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ",", "1"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}]}], "]"}], ";", "l"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.70369070155313*^9, 3.703690723600466*^9}, {
  3.7036907953042784`*^9, 3.7036908251268873`*^9}, {3.70369086999747*^9, 
  3.7036911374932203`*^9}, {3.703691485010976*^9, 3.7036914956718597`*^9}, {
  3.7036915861968946`*^9, 3.703691618917779*^9}, {3.7036916686086726`*^9, 
  3.703691754698004*^9}, {3.7036917931122303`*^9, 3.703691837360105*^9}, {
  3.7036918704185095`*^9, 3.7036918951791077`*^9}, {3.7036919664969473`*^9, 
  3.703692032553111*^9}, {3.7036920889982796`*^9, 3.703692095098467*^9}, {
  3.7036921295782456`*^9, 3.70369234269865*^9}, {3.703692423727311*^9, 
  3.7036924355788183`*^9}, {3.7036924669375353`*^9, 3.7036925559261184`*^9}, {
  3.703692608127802*^9, 3.7036926576545424`*^9}, {3.703692938121086*^9, 
  3.7036929398063583`*^9}, {3.704014458562825*^9, 3.704014464094423*^9}, {
  3.7040161014976406`*^9, 3.7040161016675634`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bl", "=", 
   RowBox[{"baseLagrange", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "datos", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.703691150024933*^9, 3.7036911792611723`*^9}, {
   3.7036915212418785`*^9, 3.7036915722401705`*^9}, {3.7036926948410635`*^9, 
   3.7036927064320965`*^9}, {3.703692821947584*^9, 3.7036928759091163`*^9}, {
   3.703692925315715*^9, 3.7036929262658615`*^9}, {3.7036929597136836`*^9, 
   3.7036929718101835`*^9}, 3.7036930391817455`*^9, {3.7040145420258656`*^9, 
   3.7040145506327333`*^9}, 3.704016171745716*^9, {3.704110712799971*^9, 
   3.704110714671854*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "x_", "]"}], "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"datos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "*", 
       RowBox[{"Bl", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "Bl", "]"}]}], "}"}]}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7040148364997225`*^9, 3.704014904085582*^9}, {
  3.7040150619370213`*^9, 3.704015117061392*^9}, {3.704016181145993*^9, 
  3.70401618492542*^9}, {3.7041101320892344`*^9, 3.70411015376948*^9}, {
  3.7041106846225805`*^9, 3.7041106880512524`*^9}}],

Cell[BoxData[
 RowBox[{"0.9999999999999999`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.9965664903967877`", " ", "x"}], "+", 
  RowBox[{"7.531454858810321`", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"47.93594366600155`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"186.39189795427956`", " ", 
   SuperscriptBox["x", "4"]}], "-", 
  RowBox[{"480.1027963273227`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"827.0791469747201`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"941.8303890796378`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"680.0540588796139`", " ", 
   SuperscriptBox["x", "8"]}], "-", 
  RowBox[{"281.85885903565213`", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"51.041631572530605`", " ", 
   SuperscriptBox["x", "10"]}]}]], "Output",
 CellChangeTimes->{{3.7041101411740103`*^9, 3.7041101550037093`*^9}, 
   3.704110689584653*^9, 3.704110720729071*^9, 3.704349243084612*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", "6"}], 
    RowBox[{"Sqrt", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7040152760060053`*^9, 3.7040152958566003`*^9}, {
  3.704109874806638*^9, 3.704109878131553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"q", "[", "x", "]"}], ",", 
       RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "/", "10"}], ",", 
         RowBox[{"p", "[", 
          RowBox[{"x", "/", "10"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704015270283723*^9, 3.7040152735379477`*^9}, {
  3.704015312761523*^9, 3.7040153515203905`*^9}, {3.7040153826770725`*^9, 
  3.70401547652905*^9}, {3.7040155208386717`*^9, 3.704015523119371*^9}, {
  3.704109883717226*^9, 3.704109898083753*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwd1HtUzAkUB/BfZW0Jm1JMpjK9HEUq5c03SYikx1QejaFCKwrpFNmdqI5H
KIbUxkbNKNv7IZtUhKxF6aFfz5nJ9JhH8/OodETtz/5xzz2fP+49595z7mXt
DfMKVicIgkPHj+wWPPC2RsZeY/J45vDEBIX+fN+9IoYDEmqZx3nfKRhot1wq
YbjgsAdXpjFGwWb5TMFNhg9OBKrS9UYorGhYXHiFEYR4iztlbCWFmj9qHS8y
IhC4oFDObaNwJvZC1HlGHHZcTgqILKNQxdx337ciDostFMvcSyiMljsNme6M
B5U/Od6yiEKoajjsYXoC1ttyuOJcCj47ufuVJudwrVRYEZ5FwdLR0Xer5SW8
Kc59RvApBEVQjHMMPlhbh4KeRVBYrHHlRHE4bSuXvoqjFNSvOHR01PFhOe/I
4+JwCn8WRKfbRF5DX+TniJxQCu1yDZPmxuvoCmjgFAdR8Ngz29wkMRWCX02f
2LDp+bautSkbv4UGgxzN8qUUNPmbbn/4mIUXe07ddlKnMLZMMnbbUAB9xZD5
S4KCqivK13udAE/iKj/7TKjQNC9b+z5fgMkP+kMOf1Ph1sPJkSeXCsER6kcV
jqjg8L7WbfKpuxAe/I0VplCBa79maI7mPailXIiqa1GhvMF+wwbjAqycG+sd
kaeC/5nO9toLpdDa7cYx3K9CWNGxhTeG/sb2CYG7hpkKn5LevVBTq4aRMDVs
V/8gXjx+Xl2/6gl4hzIybbIHERK9adp25VNUOPbXy0IG8VjLfiL3UB2Sg93M
SmwGIcx8Om5o8RJHEuoDS5VKOBk8uuOd/wpTPJ1/sshTYmFd54PnVvWoEfU/
EoUq0ezkrcpRNcDeuMK4y1yJ0CkHG1tsG/Hu6/yVMSIF/iX9Hk2/1ITTh4/e
J5MV8Hb1l0ilzXAPZWsx1ymwJOOCX4b5O9hFlM/e80UO8fjV5gO/t0I3Qi88
744cvZvqMw1qSXAvBc2x8pSjMFUU/ZbVDn6I64TxiAyCsxrn5p/oAJO5IWAo
VYbhwB3yfQ87IT72fUb0Whm0XRK8imZ1I8kDOfXdA4jR6Z0q2SXCKOe0rhlv
AFOrrIlWdzHELQlV1NwBrI70+F77VYxt29r11Mr7kZ6VmGmWLoFYUFiU69kP
DtvhtdbmHohHvx5fIOlDWUvw1aqRHnAPLBFohvdh+atC9b7r70G4dtwwmtSH
uev3DV91kYLnEKv3W2IvHB0ck0v7pHDSYDFDDHsh+nTxn8z4XtR88zRgZ0uh
XOwZz7DvA6+2KUTHSgpLxUK5WhPt7UY9w0Xv8dT8eGN4bD9481hrPBa+x+Xm
lkAv8wEQfltM7Ap6QHnXJKs/HQCPb2YUY9eDYrb+uuVHZCDMdqeIhBJkvj5z
s0dXDt6KjymhZhJ8qdt1UveJHIRzYFnFFXoPydXDOocVIPJ/kQepizHydiXj
9HQlCP68ScGfuxHON62JrqRd4+B84HkXZr021ZFyBkG8nHjDyumEd0vuN+Y4
7YbtrmkXO/Bp9+3QznsqELZdeYt821HNLYifvoUC4eMiNbJrQ0V96OburbQn
pZ0ct27D/TVWM/I9aTPbtUSWbchlCtLd/Wi7lEzPYLYhjUwrSdxLOyamiaXZ
huPbEiRTomnbBhtbiEhYOwWs/llIO866y+4iCcsCQ43WbNpZ+qv0zpIwNSZf
CP+izV1WMnSaxOxvXj6uRT/6j6nKo0j6TjcejK+kzWuvQhAJySKHVI0m2gu8
OtkrSXTe+shpaqHdvIu9fAkJclqBeSZJW+w4xrQj8UYxv9C5m7a/qFFqSaLy
rkldrIx2aWJbpC6JBwZdiZ7KH/XHxDunkSiJT/NiUbR1kk3WapK4F6jfXTNE
e2PAlqnjrRA0NmYmfaE9qr3602grMtYmhXC//tjPh4Pk51akF7ovsqX/NDGQ
3F6lakWKifb/f5zwjzkvkLXiP0vc7qo=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
mQV7mbg8YR/+B03OTn4=
      "]]}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 1.}, {0.1, 0.9422995376085528}, {0.2, 
      0.9055309785912486}, {0.3, 0.8640493962080783}, {0.4, 
      0.8156517386639391}, {0.5, 0.7597314316926148}, {0.6, 
      0.6962361700360977}, {0.7, 0.6253988495288092}, {0.8, 
      0.5476355108471794}, {0.9, 0.4634960852622455}, {1., 
      0.373635639201473}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.34},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7040153560670676`*^9, 3.7040154785130997`*^9, 3.704015524244343*^9, 
   3.7040161080840206`*^9, 3.704016189179734*^9, 3.7040163724371653`*^9, {
   3.704109884628738*^9, 3.70410989927701*^9}, 3.7041101590772266`*^9, 
   3.704110722296346*^9, 3.7043492489157987`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 5:", "Subchapter",
 CellChangeTimes->{{3.7040156365453496`*^9, 3.7040156394888344`*^9}, 
   3.704016108963683*^9, {3.704016190620293*^9, 3.7040161993518944`*^9}, {
   3.7041107234150133`*^9, 3.70411072547787*^9}, {3.704349249177615*^9, 
   3.704349252334497*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nodos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"j", "/", "10"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7036926777863503`*^9, 3.703692767351774*^9}, {
  3.703692798456949*^9, 3.703692801619893*^9}, {3.7040147241915345`*^9, 
  3.7040147243115644`*^9}, {3.7040147631977625`*^9, 3.704014763329501*^9}, {
  3.704014952124143*^9, 3.704014956992518*^9}, {3.7041099212163844`*^9, 
  3.7041099244688673`*^9}, {3.7041106632825174`*^9, 3.704110663813023*^9}, {
  3.7043471442652698`*^9, 3.7043471443334303`*^9}, {3.7043471867266064`*^9, 
  3.7043471946364317`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", "6"}], 
    RowBox[{"Sqrt", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7040152760060053`*^9, 3.7040152958566003`*^9}, {
  3.704136074493558*^9, 3.704136079036701*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"baseNewton", "[", "nodos_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "nodos", "]"}]}], ",", 
      RowBox[{"w", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}]}], ",", 
      "i"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "n"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"w", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"Product", "[", 
         RowBox[{
          RowBox[{"x", "-", 
           RowBox[{"nodos", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}]}]}], "]"}], ";", 
     "w"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704015882660788*^9, 3.7040161313752117`*^9}, {
  3.7040162187495537`*^9, 3.704016248054381*^9}, {3.7040162942192698`*^9, 
  3.7040162962488337`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"difDiv", "[", 
   RowBox[{"nodos_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "nodos", "]"}]}], ",", 
      RowBox[{"dd", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "nodos", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"valores", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"nodos", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}]}], ",", 
      "i", ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "n"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"dd", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
        RowBox[{"valores", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "2"}], ",", 
       RowBox[{"i", "\[LessEqual]", "n"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "2"}], ",", 
         RowBox[{"j", "\[LessEqual]", "i"}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{
          RowBox[{"dd", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dd", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", 
                RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "-", 
             RowBox[{"dd", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "-", "1"}], ",", 
                RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"nodos", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"nodos", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}]}],
         "]"}]}], "]"}], ";", "dd"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7043469899631653`*^9, 3.7043469925946074`*^9}, {
  3.7043470812677746`*^9, 3.704347104576597*^9}, {3.7043471553552856`*^9, 
  3.70434717093456*^9}, {3.7043472320633736`*^9, 3.70434739204696*^9}, {
  3.7043474524821496`*^9, 3.7043475533810396`*^9}, {3.70434761445234*^9, 
  3.7043476732020917`*^9}, {3.7043477053931036`*^9, 3.7043478007919397`*^9}, {
  3.704347856357559*^9, 3.704347858618822*^9}, {3.7043481014118958`*^9, 
  3.7043481129239397`*^9}, {3.704348266847789*^9, 3.7043483961201644`*^9}, {
  3.704348488310177*^9, 3.7043485958538475`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"N", "[", 
    RowBox[{"difDiv", "[", 
     RowBox[{"nodos", ",", "f"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7043475558246956`*^9, 3.704347564780095*^9}, 
   3.704348124063569*^9, {3.7043493842286005`*^9, 3.7043493884839516`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"N", "[", "dd", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7043481263663*^9, 3.704348129379795*^9}, {
  3.7043486321928654`*^9, 3.7043486344900455`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.9422995376085528`", 
      RowBox[{"-", "0.577004623914471`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.9055309785912486`", 
      RowBox[{"-", "0.36768559017304187`"}], "1.046595168707146`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.8640493962080783`", 
      RowBox[{"-", "0.41481582383170346`"}], 
      RowBox[{"-", "0.23565116829330796`"}], 
      RowBox[{"-", "4.27415445666818`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.8156517386639391`", 
      RowBox[{"-", "0.4839765754413917`"}], 
      RowBox[{"-", "0.3458037580484413`"}], 
      RowBox[{"-", "0.3671752991837779`"}], "9.767447893711005`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.7597314316926148`", 
      RowBox[{"-", "0.5592030697132427`"}], 
      RowBox[{"-", "0.3761324713592551`"}], 
      RowBox[{"-", "0.10109571103604591`"}], "0.66519897036933`", 
      RowBox[{"-", "18.20449784668335`"}], "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.6962361700360977`", 
      RowBox[{"-", "0.6349526165651708`"}], 
      RowBox[{"-", "0.37874773425964015`"}], 
      RowBox[{"-", "0.008717543001283506`"}], "0.230945420086906`", 
      RowBox[{"-", "0.8685071005648479`"}], "28.893317910197503`", "0.`", 
      "0.`", "0.`", "0.`"},
     {"0.6253988495288092`", 
      RowBox[{"-", "0.7083732050728853`"}], 
      RowBox[{"-", "0.36710294253857245`"}], "0.03881597240355898`", 
      "0.11883378851210623`", 
      RowBox[{"-", "0.22422326314959953`"}], "1.0738063956920807`", 
      RowBox[{"-", "39.74215930643632`"}], "0.`", "0.`", "0.`"},
     {"0.5476355108471794`", 
      RowBox[{"-", "0.7776333868162982`"}], 
      RowBox[{"-", "0.34630090871706487`"}], "0.0693401127383586`", 
      "0.07631035083699905`", 
      RowBox[{"-", "0.08504687535021435`"}], "0.23196064633230865`", 
      RowBox[{"-", "1.2026367847996744`"}], "48.17440315204581`", "0.`", 
      "0.`"},
     {"0.4634960852622454`", 
      RowBox[{"-", "0.8413942558493401`"}], 
      RowBox[{"-", "0.3188043451652095`"}], "0.0916552118395179`", 
      "0.055787747752898235`", 
      RowBox[{"-", "0.041045206168201634`"}], "0.07333611530335453`", 
      RowBox[{"-", "0.2266064728985059`"}], "1.2200378898764606`", 
      RowBox[{"-", "52.17151695796595`"}], "0.`"},
     {"0.373635639201473`", 
      RowBox[{"-", "0.8986044606077243`"}], 
      RowBox[{"-", "0.2860510237919206`"}], "0.10917773791096301`", 
      "0.043806315178612776`", 
      RowBox[{"-", "0.02396286514857092`"}], "0.02847056836605119`", 
      RowBox[{"-", "0.06409363848186192`"}], "0.203141043020805`", 
      RowBox[{"-", "1.129885385395173`"}], "51.04163157257078`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.704348129833104*^9, 3.7043486041630964`*^9, 
  3.704348635106682*^9, 3.7043492607383747`*^9, 3.70434939849662*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bw", "=", 
   RowBox[{"baseNewton", "[", "nodos", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704016135790186*^9, 3.70401616154224*^9}, 
   3.7040164583923364`*^9, {3.7041099343459163`*^9, 3.704109943488352*^9}, {
   3.704110670846771*^9, 3.7041106713578534`*^9}, {3.704347217107341*^9, 
   3.7043472212170863`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "x_", "]"}], ":=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dd", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", 
       RowBox[{"Bw", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "Bw", "]"}]}], "}"}]}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7043488639383106`*^9, 3.7043489330363092`*^9}, {
  3.7043489654944806`*^9, 3.704348967749898*^9}, {3.7043490288061275`*^9, 
  3.7043490891700196`*^9}, {3.7043491192135735`*^9, 3.704349120653268*^9}, {
  3.7043494434532385`*^9, 3.704349444625885*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"q", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.704349094912793*^9, 3.7043491808253164`*^9}}],

Cell[BoxData[
 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.996566490396864`", " ", "x"}], "+", 
  RowBox[{"7.531454858810469`", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"47.93594366597845`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"186.39189795434854`", " ", 
   SuperscriptBox["x", "4"]}], "-", 
  RowBox[{"480.10279632801695`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"827.0791469737619`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"941.8303890834526`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"680.054058882089`", " ", 
   SuperscriptBox["x", "8"]}], "-", 
  RowBox[{"281.8588590345345`", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"51.04163157257078`", " ", 
   SuperscriptBox["x", "10"]}]}]], "Output",
 CellChangeTimes->{{3.7043490988761153`*^9, 3.704349139747875*^9}, 
   3.704349172633109*^9, 3.704349204121457*^9, 3.7043493614528*^9, 
   3.704349404554805*^9, 3.704349451629975*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"q", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nodos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"nodos", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704349572876979*^9, 3.70434975926453*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
mQV7mbg8YR/+B03OTn4=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
RA==
      "]]}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 1.}, {0.1, 0.9422995376085528}, {0.2, 
      0.9055309785912486}, {0.3, 0.8640493962080783}, {0.4, 
      0.8156517386639391}, {0.5, 0.7597314316926148}, {0.6, 
      0.6962361700360977}, {0.7, 0.6253988495288092}, {0.8, 
      0.5476355108471794}, {0.9, 0.4634960852622455}, {1., 
      0.373635639201473}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.34},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7043497601589813`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 6:", "Subchapter",
 CellChangeTimes->{{3.704110040157326*^9, 3.704110045824335*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"10.03", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", 
     RowBox[{"x", "/", "Pi"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.704110404904432*^9, 3.7041104209004183`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nodos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", 
       RowBox[{"j", "/", "21"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "21"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704110432793416*^9, 3.7041104673902507`*^9}, {
  3.704110527263961*^9, 3.7041105608322587`*^9}, {3.7041106307929153`*^9, 
  3.704110655062665*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"nodos", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "22"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7041107443831396`*^9, 3.7041108188623157`*^9}, {
  3.704110855079747*^9, 3.7041108783355927`*^9}, {3.7058243088432093`*^9, 
  3.7058243102356367`*^9}, {3.7058307781710215`*^9, 3.705830780504393*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"perturbados", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"nodos", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "j"}], "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "3"}], ")"}]}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "22"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.705824248712983*^9, 3.705824270052699*^9}, 
   3.7058243153224382`*^9, {3.7058243481074405`*^9, 3.705824439567753*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diferencias", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"datos", "-", "perturbados"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"difMax", "=", 
   RowBox[{"diferencias", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "  ", 
    RowBox[{"Length", "[", "diferencias", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"diferencias", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ">", "difMax"}], ",", 
     RowBox[{"difMax", "=", 
      RowBox[{"diferencias", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7058307139780455`*^9, {3.7058308203451076`*^9, 3.7058308444510455`*^9}, {
   3.705830902201322*^9, 3.705830906704022*^9}, {3.7058459052967525`*^9, 
   3.705845918894529*^9}}],

Cell[CellGroupData[{

Cell[BoxData["difMax"], "Input",
 CellChangeTimes->{{3.7058245908987303`*^9, 3.705824599876541*^9}, {
  3.705824685904806*^9, 3.7058246909529004`*^9}, {3.7058459108879113`*^9, 
  3.7058459119034877`*^9}}],

Cell[BoxData["0.003794301249753218`"], "Output",
 CellChangeTimes->{{3.7058245934820237`*^9, 3.7058246015123887`*^9}, {
   3.705824681798647*^9, 3.705824691501292*^9}, 3.7058247865318003`*^9, {
   3.7058302680367374`*^9, 3.705830287292281*^9}, 3.7058303829630475`*^9, 
   3.705830434704961*^9, 3.7058304730136633`*^9, 3.7058306126779256`*^9, {
   3.7058306849116583`*^9, 3.7058307088886943`*^9}, 3.7058308553327208`*^9, 
   3.705830912886568*^9, 3.7058457712460327`*^9, 3.7058459220988245`*^9, 
   3.705848016406924*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BL", "[", 
   RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"j", "\[NotEqual]", "i"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"nodos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nodos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"nodos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7058461845216365`*^9, {3.7058462729691515`*^9, 3.7058462768418016`*^9}, {
   3.705846330826801*^9, 3.705846335748664*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "[", "x_", "]"}], ":=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BL", "[", 
        RowBox[{"i", ",", "x"}], "]"}], "*", 
       RowBox[{"datos", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.705846349720497*^9, 3.705846390033313*^9}, {
  3.705846692161126*^9, 3.7058467722909193`*^9}, {3.705846935307336*^9, 
  3.705846935312873*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "[", "x_", "]"}], ":=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BL", "[", 
        RowBox[{"i", ",", "x"}], "]"}], "*", 
       RowBox[{"perturbados", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7058467751629086`*^9, 3.7058468064642305`*^9}, {
  3.7058469451809664`*^9, 3.7058469453280644`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"diff", "[", "x_", "]"}], ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"p1", "[", "x", "]"}], "-", 
    RowBox[{"p2", "[", "x", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7058469737472577`*^9, 3.705846991337934*^9}, {
  3.705848018576886*^9, 3.7058480218097944`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"diff", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"nodos", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"nodos", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "nodos", "]"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705846863376063*^9, 3.705846918151332*^9}, {
  3.7058469951448665`*^9, 3.7058470169567785`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
AZYOlsQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.705846919214957*^9, 3.705846948831603*^9}, {
   3.70584700721306*^9, 3.70584702355857*^9}, 3.70584802873041*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"diff", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "1"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.95"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705847031769104*^9, 3.7058471008530445`*^9}, {
  3.705847216737084*^9, 3.705847226381776*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.566093045836169`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.9756526707851602`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7058470692572775`*^9, 3.705847101347205*^9}, {
   3.705847220526499*^9, 3.705847227282275*^9}, 3.7058480289239254`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lambdaN", "[", "x_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"BL", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.705847262284983*^9, 3.705847301000328*^9}, {
  3.705847362309847*^9, 3.705847364095804*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"lambdaN", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7058473261366673`*^9, 3.7058473380531454`*^9}, {
  3.7058473766774015`*^9, 3.7058473847869015`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
8Q7/939muPS//zP/H8kkHgs=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.705847339117136*^9, {3.7058473735056477`*^9, 3.7058473889584846`*^9}, 
   3.7058480336558676`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lambdaN", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "1"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.95"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705847399985732*^9, 3.7058474403860264`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20576.255721891415`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.9763495728531949`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.705847441765833*^9, 3.7058480345981092`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"cteLesbesgue", " ", "=", " ", "20576.3"}], ",", " ", 
   RowBox[{"Mal", " ", "condicionamiento"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.705847473300647*^9, 3.7058474984534907`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cheb", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "i"}]}], ")"}], 
        RowBox[{"Pi", "/", "44"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "21"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.705847534156136*^9, 3.7058475915404387`*^9}, {
  3.7058476382992525`*^9, 3.7058476409382057`*^9}, {3.7058477784462185`*^9, 
  3.705847788506941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BL", "[", 
   RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"j", "\[NotEqual]", "i"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"cheb", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cheb", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"cheb", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "cheb", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.705833648746479*^9, 3.7058337883197584`*^9}, {
  3.705833820998767*^9, 3.705834054349883*^9}, {3.705834135431981*^9, 
  3.705834226044671*^9}, {3.705834294027049*^9, 3.7058343400598574`*^9}, {
  3.7058343717749205`*^9, 3.7058344686214275`*^9}, {3.7058345503075457`*^9, 
  3.705834590546556*^9}, {3.7058347009925995`*^9, 3.705834701549775*^9}, {
  3.705834735122551*^9, 3.705834744587861*^9}, {3.705847826247284*^9, 
  3.7058478540852127`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "x_", "]"}], ":=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BL", "[", 
        RowBox[{"i", ",", "x"}], "]"}], "*", 
       RowBox[{"f", "[", 
        RowBox[{"cheb", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "cheb", "]"}]}], "}"}]}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7058478610261745`*^9, 3.7058478684694605`*^9}, {
  3.7058479005228496`*^9, 3.7058479567262697`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lambdaN", "[", "x_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"BL", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "cheb", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7058480557192755`*^9, 3.705848095747185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"lambdaN", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705848100568569*^9, 3.705848109798462*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
fB7PrwiPMTWPhP7v/2jh//+P9n/8SVEQ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {1.0009549411166445`, 2.9303952327414766`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7058481127981977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lambdaN", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "1"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7058481208935604`*^9, 3.705848129302253*^9}, {
  3.705848188084679*^9, 3.705848211078388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.930431674679715`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.99999999999`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7058482116790624`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"cteLesbesgue", " ", "=", " ", "2.9303"}], ",", " ", 
   RowBox[{"Buen", " ", "condicionamiento"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7058482344492865`*^9, 3.7058482427436004`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 7:", "Subchapter",
 CellChangeTimes->{{3.7058483497984943`*^9, 3.705848354255659*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"nodos", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "/", "2.36"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Length", "[", "nodos", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7058483775840235`*^9, 3.705848449766389*^9}, {
  3.705848547190178*^9, 3.7058485855160756`*^9}, {3.7058499547935886`*^9, 
  3.705849961985989*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BL", "[", 
   RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"j", "\[NotEqual]", "i"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"nodos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nodos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"nodos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "nodos", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7058486777246447`*^9, 3.7058486802955923`*^9}, {
   3.70584871285246*^9, 3.7058487393293595`*^9}, 3.705848773453367*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H2", "[", 
   RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"nodos", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"BL", "[", 
          RowBox[{"i", ",", "t"}], "]"}], ",", 
         RowBox[{"{", "t", "}"}]}], "]"}]}]}], "/.", 
     RowBox[{"t", "\[Rule]", 
      RowBox[{"nodos", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"BL", "[", 
     RowBox[{"i", ",", "x"}], "]"}], "^", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1", "[", 
   RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", 
     RowBox[{"nodos", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"BL", "[", 
     RowBox[{"i", ",", "x"}], "]"}], "^", "2"}]}]}]}], "Input",
 CellChangeTimes->{{3.7058485874033575`*^9, 3.705848603221819*^9}, {
   3.7058486550437117`*^9, 3.7058486684438295`*^9}, {3.7058487804768925`*^9, 
   3.705848894642995*^9}, {3.70584967276857*^9, 3.7058496875091496`*^9}, {
   3.705850123669711*^9, 3.7058501277219563`*^9}, 3.7058501940153723`*^9, {
   3.7059227425752516`*^9, 3.7059227542102585`*^9}, {3.7059228324466915`*^9, 
   3.7059228360744257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "x_", "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", 
       RowBox[{"H2", "[", 
        RowBox[{"i", ",", "x"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", 
       RowBox[{"H1", "[", 
        RowBox[{"i", ",", "x"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7058490249344206`*^9, 3.705849037218996*^9}, {
   3.7058490786412325`*^9, 3.7058490808746924`*^9}, {3.7058491513400497`*^9, 
   3.7058492016740437`*^9}, {3.7058494252291594`*^9, 3.705849473079605*^9}, {
   3.705849979040403*^9, 3.705850012703086*^9}, 3.7058501393694305`*^9, {
   3.7059227715850697`*^9, 3.7059227864153843`*^9}, {3.705922845610697*^9, 
   3.7059228477659936`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], ",", 
     RowBox[{"p", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705849334365302*^9, 3.70584937095824*^9}, {
   3.7058495506300974`*^9, 3.7058495509147673`*^9}, {3.7058498095629234`*^9, 
   3.7058498456321173`*^9}, {3.7058498892934065`*^9, 
   3.7058498952329173`*^9}, {3.7058500160292397`*^9, 3.705850017725097*^9}, {
   3.7058500970727496`*^9, 3.7058501002772837`*^9}, {3.7058501604771667`*^9, 
   3.7058501765325203`*^9}, 3.7058502312044477`*^9, {3.7059228775405655`*^9, 
   3.705922877680199*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVj3041AccwA/JeUnc75oURWEUz1aRNPX9UjM05UzedjxewibhmJSU3dNo
dckKW21ezrwsu55Dl7RQinQ2evOaQubCXejHuTs/pZv98Xk+z+fPj2Vkol+0
Jo1G81nifz9rlq6i0Ug4eubD/WZp6u5rBf1py7VJ+MYshKz/yB+y4x4+N9Aj
QbSy0ySGOAQuzIoiUyYJRw5nMOkrvgN+bLj1NlsSGjd252fQfoBEwz7HGF8S
1DfoL0TjeWDAbv2qg0/CQspQx9r6MvBQFV+87DYDCrJyNCtYBNytdszdxbOQ
qVudPh7dAiYhYxPiUTnkfr3eVjLwD/Ra1CvJDQqwdW/w4T59CuxJtr7NSSWU
lH4h47f3wK5yp2RsVkFg07kHbp7PQRI+Ohy7jgJPppVvyeBLqGssz7Y/ugBn
zF0lyaavYGTZlczem++Awznv6p8/Al2syMwcxiLwWcMZXmajYMELe2oX+AEu
B9W5a6VL4JeoBHZUgRrsYkWO8vuvIY5vp/JPoyGDwek9bToOzllO0rjVGriu
bSKv4csJiJ0UhOk81MDxVd3Ezhwp2G+8lpScrInBQkmDeaMM1j15sNmXoYWc
5RHW/R1vIEXtFXfjrhZajrgN3JZNgrJ8nMWLWIZmPV4uLyan4GXH28YJI23c
yRuwEbybhsBWbiuzSRvNR85kmi++BfUWh1RR6HKUxXj4r0khQX/Dnqp+fR2s
MFfrd02RsPfH5OwkoQ6u0JQXOoTOAOPOZlqfDx3LuJzrJx7OwJ6jBxZbFujo
88Y144HzLPxefr5sY6EufmywZsdA0SwcOujYqbtPDwVpB4prdOXQ0BOdd0ep
h7P3cWwwSQ7QUaM59rM+thRIMp88koPN5zGKvL0GaCV3Oc7aOgefOTpdvDFm
gMKDKUGMnDl4PZvTXpa1Aofsz9VYSOZgdhsry3SrIULL89M8VID9GweZRpch
ir1bA6bzFfC3VeqzJO5KtHKWqDKmFeAtk22xYxihhDSXRaASFuxeeWpEGuHU
NdNus1wlvPjzXGnhLSPcUn78bM+/Sugau7efo2uMBo3vN6V+ooLFKOEu3Qhj
FHh3Csa/V8GMeDidXm+M/ERxnt9jFbyfKDJw02HgUOqxYSuTedjhbfzKNYyB
27cPppZEzQMvxpieXM3AXSVE272qebgaF3DKUM3Aeth3NXRqHlTVvtsTDhKo
4eXhmO5EQWhNn7tOJYFFrLWKsjQKBmJvWif+QeBvSQJKfIyCoPUF9L6rBEK/
h3TqOAX+F/weVQoIDDwpOOucQYF3fGewRy2B0sHMx+3fU7DDtiUpq5FAUT/J
kZ2lgMkXFmt1EXiBXWtjVkjBpcAc7uFuAtOz4y/tLqLAaGX8oa4eAlWlF6Xh
xRTon7LbVNZPYF2QdUgFnwJNdnmd+xCBrw+07nWooIA0+bWDK11qUZy7i5CC
hMfHqqUyArUbLGNCqimYzA68xJokMGw1J/VEDQXjCmaQ5VsCDwdLApquUzDU
lTvaPEdge/wRa6yngM1LaLNVEthW6lwZfmvp392n6icVgflWtQzuXxT01Ool
hi8QOH26SXivgQK/b6Us8TsCzUwChkYaKXhiIXb8dJHAyOgqSuMOBfv7K00u
f1j69bxN23CXgo7crAW1msDeKzy5WzMF/wEmFFpe
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7058493406043844`*^9, 3.7058493716908307`*^9}, 
   3.705849437827024*^9, 3.7058494964235497`*^9, {3.7058495471457653`*^9, 
   3.7058495563494873`*^9}, {3.7058496783466682`*^9, 
   3.7058496909450016`*^9}, {3.7058498053458004`*^9, 3.705849816124346*^9}, 
   3.7058498463325696`*^9, 3.705849897266632*^9, 3.70584999700552*^9, {
   3.7058500896514907`*^9, 3.7058501011781673`*^9}, {3.705850165566749*^9, 
   3.7058501777187223`*^9}, 3.705850231956455*^9, 3.705922810514058*^9, 
   3.705922878859068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "'"}], "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", "d"}], "Input",
 CellChangeTimes->{{3.7058502451886663`*^9, 3.7058502732985654`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.42372881381743355`", ",", "0.8474576296284795`", ",", 
   "1.271186463534832`", ",", "1.6949154287576675`", ",", 
   "2.1186448335647583`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7058502592146025`*^9, 3.705850274680896*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.42372881355932207`", ",", "0.8474576271186441`", ",", 
   "1.2711864406779663`", ",", "1.6949152542372883`", ",", 
   "2.1186440677966103`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7058502592146025`*^9, 3.705850274680896*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 8:", "Subchapter",
 CellChangeTimes->{{3.7058503182886443`*^9, 3.7058503212599373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "=", "1.47"}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"x", "^", "j"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "j"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.705898049532384*^9, 3.7058981024297953`*^9}}],

Cell[BoxData["1.47`"], "Output",
 CellChangeTimes->{
  3.705898103092869*^9, 3.7058981800357513`*^9, {3.7058982103899617`*^9, 
   3.7058982276029215`*^9}, 3.705898277627808*^9, 3.705898384342202*^9, 
   3.7058984663308067`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["8", "3"], ",", 
   FractionBox["81", "4"], ",", 
   FractionBox["1024", "5"], ",", 
   FractionBox["15625", "6"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.705898103092869*^9, 3.7058981800357513`*^9, {3.7058982103899617`*^9, 
   3.7058982276029215`*^9}, 3.705898277627808*^9, 3.705898384342202*^9, 
   3.705898466341797*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", "x_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"d", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}], "^", "i"}], "/", 
      RowBox[{"i", "!"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Length", "[", "d", "]"}], "-", "1"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7058981082692776`*^9, 3.7058982224719405`*^9}, {
  3.705898264815733*^9, 3.7058982649907875`*^9}, {3.7058983068502645`*^9, 
  3.7058983991798997`*^9}, {3.705898436287403*^9, 3.705898463337245*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 9:", "Subchapter",
 CellChangeTimes->{{3.7053185238562813`*^9, 3.705318548847169*^9}, {
  3.7058466859705415`*^9, 3.705846687656576*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"{", 
   RowBox[{
   "0.4", ",", "0.5", ",", "2.34", ",", "3.45", ",", "4.567", ",", "5.081", 
    ",", "5.26"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"n", "=", 
  RowBox[{
   RowBox[{"Length", "[", "p", "]"}], "-", "1"}]}]}], "Input",
 CellChangeTimes->{{3.7053192826034174`*^9, 3.7053193374034557`*^9}, {
  3.705319765596389*^9, 3.7053197665764985`*^9}, {3.705724042909346*^9, 
  3.705724049181532*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.4`", ",", "0.5`", ",", "2.34`", ",", "3.45`", ",", "4.567`", ",", 
   "5.081`", ",", "5.26`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7053193387012386`*^9, 3.7053197672026186`*^9, 3.705319934025544*^9, 
   3.7053200369934254`*^9, 3.705320166592525*^9, 3.7053204156240687`*^9, 
   3.705396478368458*^9, 3.7057200999146624`*^9, 3.7057209145167646`*^9, 
   3.7057214806398077`*^9, {3.7057218014966526`*^9, 3.7057218053559546`*^9}, 
   3.7057224020707664`*^9, 3.705723682503742*^9, 3.705723746447122*^9, 
   3.705723930546045*^9, {3.7057240361073575`*^9, 3.705724049986253*^9}, 
   3.7057245654912786`*^9, 3.7057246922436333`*^9}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.7053193387012386`*^9, 3.7053197672026186`*^9, 3.705319934025544*^9, 
   3.7053200369934254`*^9, 3.705320166592525*^9, 3.7053204156240687`*^9, 
   3.705396478368458*^9, 3.7057200999146624`*^9, 3.7057209145167646`*^9, 
   3.7057214806398077`*^9, {3.7057218014966526`*^9, 3.7057218053559546`*^9}, 
   3.7057224020707664`*^9, 3.705723682503742*^9, 3.705723746447122*^9, 
   3.705723930546045*^9, {3.7057240361073575`*^9, 3.705724049986253*^9}, 
   3.7057245654912786`*^9, 3.7057246922461405`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"B", "[", 
   RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"i", "<", "n"}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "\[LessEqual]", "x", "\[LessEqual]", 
       RowBox[{"p", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"p", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
         RowBox[{"p", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], "\[LessEqual]", "x", 
       "\[LessEqual]", " ", 
       RowBox[{"p", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "2"}], "]"}], "]"}], "-", "x"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "2"}], "]"}], "]"}], "-", 
         RowBox[{"p", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}]}], ",", "True", ",",
       "0"}], "]"}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "\[LessEqual]", "x", "\[LessEqual]", 
       " ", 
       RowBox[{"p", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"p", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
         RowBox[{"p", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", "True", ",", "0"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7057238275916157`*^9, 3.705723918813073*^9}, {
   3.705724009115142*^9, 3.705724017343603*^9}, 3.7057240646574583`*^9, {
   3.7057241176098804`*^9, 3.705724304935465*^9}, {3.7057243545161324`*^9, 
   3.7057243727334833`*^9}, {3.7057244325498724`*^9, 
   3.7057244325909147`*^9}, {3.7057629252071753`*^9, 3.7057629479429216`*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"i", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"p", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"p", "[", 
        RowBox[{"[", 
         RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7057222378908777`*^9, 3.705722254982715*^9}, {
  3.7057239474229155`*^9, 3.705723982991335*^9}, {3.7057240768172646`*^9, 
  3.7057241102290845`*^9}, {3.7057243187985306`*^9, 3.705724327368199*^9}, {
  3.705725129651599*^9, 3.70572514573015*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nodos", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], "/", "20.78"}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.705723714474472*^9, 3.705724686006922*^9, {3.705724767796939*^9, 
   3.705724870229209*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.9923002887391723`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.9879692011549567`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.34`", ",", "0.7364966313763235`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.45`", ",", "0.42721366698748797`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.567`", ",", 
     RowBox[{"-", "0.0037290182868141564`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.081`", ",", 
     RowBox[{"-", "0.24237540904716082`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.26`", ",", 
     RowBox[{"-", "0.33145332050048104`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7057248722726836`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "/", "20.78"}]}]}]], "Input",
 CellChangeTimes->{{3.7057250540335636`*^9, 3.705725074591069*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "x_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"p", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], 
     RowBox[{"B", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.705724730953765*^9, 3.705724765860011*^9}, {
   3.7057249054251018`*^9, 3.7057249087715425`*^9}, {3.7057249563481092`*^9, 
   3.7057250451510897`*^9}, 3.7057250916541357`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"s", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"p", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{"[", 
       RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7057250173545437`*^9, 3.705725020139371*^9}, {
  3.7057250957271256`*^9, 3.7057251260766897`*^9}, {3.705725168693117*^9, 
  3.705725179778185*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVjnk41Hkcxye3HM3wm9pSS3pCetq2rdSkfL6IZ/Kg8LTSQ0+HNsQ6u5yN
3ZgtwuamcR8dTzqICl/EY2ldc+RmkKsZ88t9TWbtH6/n/bz+eT+vnZd9Ha/K
USgUp3X+XwPKVoX0tG4IvDMdJa4hwbilTaD4uhvYhe/mA9f9p/SoIv/mbvAu
Lp1ewSSYHJqzObXaDbnGlgnK627l0Zaw5NoD9UZ1v+tUkeDefk/XWa8XRtWY
efvekZCbPXOMKOqDNJ/AmdWXJOww/9f/Yekg/MNh7kFZJGgOKuurtA3ChsOn
HTgcEtZCLbmsyUGo/NtjZvUxCb6ubmnHNgmhMp+XVZZJwulU/vK+k0Lo139Q
pJ9Owibqx/fECyE8i47wGkkkIU6WdXyYNQQBs2HVsr9IiB9wQWF7RuCVUwcn
L4AE7fJzmQ/RGBx4LxFfMF//p5y4qcOcBJq+fbBElQSHax/03BPEoEvJim1p
kEDpRL0uO5eE2M0Z+yrCJdBqWbr4JngarM4c7WXtkcCLT7c5l7bPQnXXkOqj
liloE0aS0pw5uEBOrPj4TcEbhR6jm8wFKLdySXOTn4Kuspvq/dxF0Nmic2Ul
SQyeukolrLPLoELriCjYJYaqlGGGwvIKsOhNUJglAofHCr5Bd6XQeWkkX2mH
CIpfBcbUGa3B56oHpnbRX+F6uMDDvkkG0rvmn+jiSTjiXb04UkhBHYZRqytO
k5CefbQk7s4GtDDAQN8LJ4CTITD9xUwOjcr0xWvfx0H+x7RKS215dPtWf8Jz
s3HgSAXbg77Io4c6Pyaxg8egJ+ewY0aRArqay1rUrxyFW60fQg6EKKIQ07a9
nNEvUFrrHlyNlFBQUmTMB/oXMKRFn/OSU0b7u8xHWy1GQDreZnyPr4wMUggz
+V+Hwf+eKTc5VQXJKbvIYvyHgPm0xWeLjyrySyh53ugvhLN7uyfentiIvDJc
gjr7BkAuUJlhR1FDlbNRvVZf+4Bm4RrmyFNDXTWmDpFVPVDTyUu2T1VHAa6a
ns8Ku6CgqT7O00UDbWcoTB2M+Qwii77QWWNNtGagdFnjEB+4kZshSKKJAk6/
Dj0y3wHbbG7NX6nbhPJFqLdY1AobvMPQ7pNUtPS1opXY1QzUodV5wwIq+lbD
dxedbYD2tNjdlzVpyLvc1byAUgPCspc4xY+G7p5nONS1l0E2fZyn0EtDftEm
c/MqBRCyq8eZZamFKD/TeiueeeGixAvWy/laSC/2/liofRH+49TCi2JNbaSn
afbkYF45LrmkG+nkr408kLXRRnYtXjBUbNDgaqMz1LK3BmaNWHJgjSU7RqCl
/ZwRm/gWbJLFfiLOJJDexeQ+9eYOfNz7vjiHQ6Ag68XfMjo7sAUjZr9zNoEq
EoXUvaMd2I4XV1abR6AfPG0/2lG42F05pTb5KYGOTrNzs024OMG3oBtVEIgS
kWQTmsfFYqhTTeIRqCZeitTCeXhGvd7WRkAgvxtelVUPeHixuyFO9plAKnUX
nf3TeFguqInu1bPe82hM1FvKw1uL23fCEIFKCee4ahEPW1MHGZMSArknfcLv
XPjYtl8YyvlGILSMD4Zf42PHp8PYaYZA1IbjjZY3+Njt5JhV9TyB/kxss+XG
83HQ7SmHR1ICtWud50ob+TjYikxkrhGI+TbBolnAxxFa053fZQQqrnXgpo7w
8f3nc24e8nTEpF4/w5DxcfydhewdinTEdqo3U9MQ4GTrpRGuEh1VrhXYDmwT
4EztFQO2Ch0JadTg10YCnCNc9TyxkY7mYuQao00E+D9h6p/T
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
GHeS/wPhael1
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.4, 5.26}, {-0.33145327114252293`, 0.9923002849207435}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7057251836065593`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 10:", "Subchapter",
 CellChangeTimes->{{3.70589850631174*^9, 3.705898510597187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    RowBox[{"Abs", "[", "x", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.705899566889624*^9, 3.7058995824606333`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"-", "2.09"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "4.56"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "8"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7058987844418144`*^9, 3.705898836865053*^9}, {
  3.705899481289073*^9, 3.705899507238349*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "+", 
      RowBox[{"i", "*", "h"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"nodos", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"2", 
    RowBox[{"IdentityMatrix", "[", 
     RowBox[{"n", "+", "1"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "n"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "+", "1"}], ",", 
        RowBox[{"i", "+", "2"}]}], "]"}], "]"}], "=", 
     RowBox[{"1", "/", "2"}]}], ";", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "+", "1"}], ",", "i"}], "]"}], "]"}], "=", 
     RowBox[{"1", "/", "2"}]}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", "n"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"Y", "[", 
     RowBox[{"[", "i", "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{"y", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
     RowBox[{"2", 
      RowBox[{"y", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "+", 
     RowBox[{"y", "[", 
      RowBox[{"[", 
       RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{"A", ",", 
    RowBox[{"3", 
     RowBox[{"Y", "/", 
      RowBox[{"h", "^", "2"}]}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.705899378811246*^9, 3.70589946520374*^9}, {
  3.7058995038752327`*^9, 3.7058995556143465`*^9}, {3.705899588547137*^9, 
  3.7058996737709417`*^9}, {3.705899711432648*^9, 3.7058997286137714`*^9}, {
  3.7058997660726533`*^9, 3.705900074116416*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"-", "0.5278574368509255`"}], ",", "0.8477628131934376`", ",", 
   "0.9758029509068233`", ",", 
   RowBox[{"-", "0.5667102354435818`"}], ",", 
   RowBox[{"-", "0.0017402642848453108`"}], ",", 
   RowBox[{"-", "0.08916522583336786`"}], ",", 
   RowBox[{"-", "0.045847828979957324`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.705900074809925*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"nodos", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "\[LessEqual]", "x", "\[LessEqual]", 
     RowBox[{"nodos", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nodos", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", "x"}], ")"}], "^", 
        "3"}], 
       RowBox[{"6", "h"}]]}], "+", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{"nodos", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "^", "3"}], 
       RowBox[{"6", "h"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "h"], "-", 
        RowBox[{
         FractionBox["h", "6"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
           RowBox[{"c", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"nodos", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], "+", 
     RowBox[{"y", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      FractionBox[
       RowBox[{"h", "^", "2"}], "6"]}]}], ",", "True", ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7058993543449354`*^9, 3.7058993601807404`*^9}, {
  3.705900160620903*^9, 3.705900294074375*^9}, {3.7059003338377304`*^9, 
  3.705900344686567*^9}, {3.7059009976803455`*^9, 3.705901067074504*^9}, {
  3.705901121021722*^9, 3.7059011463242493`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", "x_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"i", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7059003503858633`*^9, 3.7059003534183874`*^9}, {
  3.7059004035911293`*^9, 3.7059004287408996`*^9}, {3.7059004879071565`*^9, 
  3.7059004891614256`*^9}, {3.705900725621292*^9, 3.7059007316813416`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"S", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"nodos", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"nodos", "[", 
      RowBox[{"[", 
       RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705900492246254*^9, 3.7059005163528795`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
9NBoApIYnLwoewqKeDA5qxtDwP8A7EW20Q==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
8mES9tcvdVnMjwn/Aw5pwaE=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2.09, 4.56}, {0., 1.7155980838534464`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.705900571154049*^9, {3.705900727960291*^9, 3.7059007336911335`*^9}, {
   3.7059010502099733`*^9, 3.7059010710945263`*^9}, 3.7059011495265026`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>1.7 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 103, 1, 172, "Title"],
Cell[CellGroupData[{
Cell[708, 27, 100, 1, 114, "Subchapter"],
Cell[811, 30, 89, 1, 50, "Text"],
Cell[CellGroupData[{
Cell[925, 35, 777, 19, 147, "Input"],
Cell[1705, 56, 214, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1956, 66, 540, 14, 83, "Input"],
Cell[2499, 82, 453, 10, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2989, 97, 373, 8, 50, "Input"],
Cell[3365, 107, 312, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3714, 118, 678, 20, 115, "Input"],
Cell[4395, 140, 185, 3, 51, "Output"],
Cell[4583, 145, 186, 3, 51, "Output"],
Cell[4772, 150, 148, 2, 49, "Output"]
}, Open  ]],
Cell[4935, 155, 87, 1, 50, "Text"],
Cell[CellGroupData[{
Cell[5047, 160, 529, 15, 50, "Input"],
Cell[5579, 177, 319, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5935, 190, 387, 11, 83, "Input"],
Cell[6325, 203, 369, 12, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6731, 220, 420, 12, 83, "Input"],
Cell[7154, 234, 259, 7, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7450, 246, 250, 7, 50, "Input"],
Cell[7703, 255, 242, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7982, 265, 438, 13, 83, "Input"],
Cell[8423, 280, 143, 2, 51, "Output"],
Cell[8569, 284, 162, 3, 51, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8780, 293, 104, 1, 114, "Subchapter"],
Cell[CellGroupData[{
Cell[8909, 298, 281, 6, 50, "Input"],
Cell[9193, 306, 259, 5, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9489, 316, 578, 15, 83, "Input"],
Cell[10070, 333, 664, 20, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10771, 358, 778, 23, 115, "Input"],
Cell[11552, 383, 675, 20, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12264, 408, 549, 14, 83, "Input"],
Cell[12816, 424, 330, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13183, 437, 493, 13, 83, "Input"],
Cell[13679, 452, 368, 9, 49, "Output"]
}, Open  ]],
Cell[14062, 464, 323, 8, 50, "Input"],
Cell[14388, 474, 328, 9, 50, "Input"],
Cell[CellGroupData[{
Cell[14741, 487, 1446, 39, 179, "Input"],
Cell[16190, 528, 17749, 305, 351, 8258, 148, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33988, 839, 104, 1, 114, "Subchapter"],
Cell[34095, 842, 271, 8, 50, "Input"],
Cell[34369, 852, 498, 11, 115, "Input"],
Cell[CellGroupData[{
Cell[34892, 867, 405, 8, 50, "Input"],
Cell[35300, 877, 358, 7, 49, "Output"]
}, Open  ]],
Cell[35673, 887, 417, 12, 83, "Input"],
Cell[CellGroupData[{
Cell[36115, 903, 897, 26, 147, "Input"],
Cell[37015, 931, 2585, 79, 310, "Output"],
Cell[39603, 1012, 718, 21, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40358, 1038, 194, 3, 83, "Input"],
Cell[40555, 1043, 2842, 87, 199, "Output"],
Cell[43400, 1132, 1328, 41, 201, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44765, 1178, 465, 8, 50, "Input"],
Cell[45233, 1188, 543, 10, 80, "Output"]
}, Open  ]],
Cell[45791, 1201, 767, 24, 115, "Input"],
Cell[CellGroupData[{
Cell[46583, 1229, 439, 12, 83, "Input"],
Cell[47025, 1243, 9168, 163, 347, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56242, 1412, 99, 1, 114, "Subchapter"],
Cell[56344, 1415, 578, 12, 50, "Input"],
Cell[56925, 1429, 741, 17, 50, "Input"],
Cell[57669, 1448, 2342, 56, 307, "Input"],
Cell[60014, 1506, 687, 13, 50, "Input"],
Cell[CellGroupData[{
Cell[60726, 1523, 746, 20, 115, "Input"],
Cell[61475, 1545, 948, 22, 116, "Output"]
}, Open  ]],
Cell[62438, 1570, 329, 9, 50, "Input"],
Cell[CellGroupData[{
Cell[62792, 1583, 1025, 27, 147, "Input"],
Cell[63820, 1612, 5915, 110, 347, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69784, 1728, 279, 4, 114, "Subchapter"],
Cell[70066, 1734, 694, 14, 50, "Input"],
Cell[70763, 1750, 329, 9, 50, "Input"],
Cell[71095, 1761, 1227, 36, 211, "Input"],
Cell[72325, 1799, 3119, 82, 467, "Input"],
Cell[75447, 1883, 306, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[75778, 1894, 209, 4, 50, "Input"],
Cell[75990, 1900, 3486, 73, 315, "Output"]
}, Open  ]],
Cell[79491, 1976, 355, 7, 50, "Input"],
Cell[79849, 1985, 750, 20, 115, "Input"],
Cell[CellGroupData[{
Cell[80624, 2009, 157, 3, 50, "Input"],
Cell[80784, 2014, 973, 23, 116, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81794, 2042, 936, 27, 147, "Input"],
Cell[82733, 2071, 5702, 107, 347, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88484, 2184, 100, 1, 114, "Subchapter"],
Cell[88587, 2187, 247, 7, 50, "Input"],
Cell[88837, 2196, 440, 12, 50, "Input"],
Cell[89280, 2210, 510, 12, 50, "Input"],
Cell[89793, 2224, 664, 19, 115, "Input"],
Cell[90460, 2245, 955, 26, 179, "Input"],
Cell[CellGroupData[{
Cell[91440, 2275, 204, 3, 50, "Input"],
Cell[91647, 2280, 520, 7, 49, "Output"]
}, Open  ]],
Cell[92182, 2290, 867, 25, 179, "Input"],
Cell[93052, 2317, 620, 18, 115, "Input"],
Cell[93675, 2337, 583, 17, 115, "Input"],
Cell[94261, 2356, 317, 8, 50, "Input"],
Cell[CellGroupData[{
Cell[94603, 2368, 531, 14, 115, "Input"],
Cell[95137, 2384, 35749, 597, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130923, 2986, 423, 12, 50, "Input"],
Cell[131349, 3000, 305, 6, 49, "Output"]
}, Open  ]],
Cell[131669, 3009, 447, 12, 83, "Input"],
Cell[CellGroupData[{
Cell[132141, 3025, 368, 9, 50, "Input"],
Cell[132512, 3036, 41548, 693, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174097, 3734, 377, 11, 83, "Input"],
Cell[174477, 3747, 230, 5, 49, "Output"]
}, Open  ]],
Cell[174722, 3755, 249, 5, 83, "Input"],
Cell[174974, 3762, 573, 17, 83, "Input"],
Cell[175550, 3781, 1182, 29, 179, "Input"],
Cell[176735, 3812, 609, 18, 115, "Input"],
Cell[177347, 3832, 399, 11, 83, "Input"],
Cell[CellGroupData[{
Cell[177771, 3847, 261, 7, 50, "Input"],
Cell[178035, 3856, 40180, 669, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218252, 4530, 423, 12, 83, "Input"],
Cell[218678, 4544, 202, 5, 49, "Output"]
}, Open  ]],
Cell[218895, 4552, 251, 5, 83, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219183, 4562, 102, 1, 114, "Subchapter"],
Cell[219288, 4565, 983, 31, 147, "Input"],
Cell[220274, 4598, 863, 24, 179, "Input"],
Cell[221140, 4624, 1427, 40, 147, "Input"],
Cell[222570, 4666, 951, 24, 115, "Input"],
Cell[CellGroupData[{
Cell[223546, 4694, 761, 16, 83, "Input"],
Cell[224310, 4712, 22989, 388, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247336, 5105, 292, 8, 83, "Input"],
Cell[247631, 5115, 272, 6, 80, "Output"],
Cell[247906, 5123, 273, 6, 80, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248228, 5135, 104, 1, 114, "Subchapter"],
Cell[CellGroupData[{
Cell[248357, 5140, 445, 12, 115, "Input"],
Cell[248805, 5154, 227, 4, 49, "Output"],
Cell[249035, 5160, 424, 11, 71, "Output"]
}, Open  ]],
Cell[249474, 5174, 721, 21, 83, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250232, 5200, 153, 2, 114, "Subchapter"],
Cell[CellGroupData[{
Cell[250410, 5206, 455, 11, 141, "Input"],
Cell[250868, 5219, 675, 12, 83, "Output"],
Cell[251546, 5233, 545, 8, 83, "Output"]
}, Open  ]],
Cell[252106, 5244, 2615, 76, 413, "Input"],
Cell[254724, 5322, 740, 19, 141, "Input"],
Cell[CellGroupData[{
Cell[255489, 5345, 575, 19, 141, "Input"],
Cell[256067, 5366, 733, 20, 238, "Output"]
}, Open  ]],
Cell[256815, 5389, 223, 6, 85, "Input"],
Cell[257041, 5397, 590, 16, 85, "Input"],
Cell[CellGroupData[{
Cell[257656, 5417, 564, 16, 85, "Input"],
Cell[258223, 5435, 7032, 127, 608, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[265304, 5568, 100, 1, 193, "Subchapter"],
Cell[265407, 5571, 233, 6, 85, "Input"],
Cell[265643, 5579, 347, 9, 195, "Input"],
Cell[CellGroupData[{
Cell[266015, 5592, 2633, 87, 576, "Input"],
Cell[268651, 5681, 420, 9, 136, "Output"]
}, Open  ]],
Cell[269086, 5693, 2271, 70, 683, "Input"],
Cell[271360, 5765, 464, 11, 85, "Input"],
Cell[CellGroupData[{
Cell[271849, 5780, 470, 14, 141, "Input"],
Cell[272322, 5796, 8911, 158, 664, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
